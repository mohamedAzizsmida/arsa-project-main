{% extends 'association/base.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
    <style>

.sidebar-nav-wrapper {
    /* existing styles */
    transition: all 0.3s ease-in-out;
}

.sidebar-nav-wrapper.collapsed {
    margin-left: -300px; /* Adjust based on your sidebar width */
}

.overlay {
    /* existing styles */
    display: none;
}

.overlay.active {
    display: block;
}

.main-wrapper {
    /* existing styles */
    transition: all 0.3s ease-in-out;
}

.main-wrapper.active {
    margin-left: 0;
}
</style>
{% endblock %}


{% block body %}
    
    
    <!-- ======== Preloader =========== -->
    <div id="preloader">
      <div class="spinner"></div>
    </div>
    <!-- ======== Preloader =========== -->

    <!-- ======== sidebar-nav start =========== -->
    <aside class="sidebar-nav-wrapper">
      <div class="navbar-logo">
        <a href="{{ path('association_dashboard') }}">
          <img src="{{ asset('img/ecodon.png') }}" alt="logo" style="width: 120px; height: auto; max-height: 60px; object-fit: contain;"/>
        </a>
      </div>
      <nav class="sidebar-nav">
        <ul>
          <li class="nav-item nav-item-has-children">
            <a
              href="#0"
              data-bs-toggle="collapse"
              data-bs-target="#ddmenu_1"
              aria-controls="ddmenu_1"
              aria-expanded="false"
              aria-label="Toggle navigation"
            >
              <span class="icon">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M8.74999 18.3333C12.2376 18.3333 15.1364 15.8128 15.7244 12.4941C15.8448 11.8143 15.2737 11.25 14.5833 11.25H9.99999C9.30966 11.25 8.74999 10.6903 8.74999 10V5.41666C8.74999 4.7263 8.18563 4.15512 7.50586 4.27556C4.18711 4.86357 1.66666 7.76243 1.66666 11.25C1.66666 15.162 4.83797 18.3333 8.74999 18.3333Z" />
                  <path
                    d="M17.0833 10C17.7737 10 18.3432 9.43708 18.2408 8.75433C17.7005 5.14918 14.8508 2.29947 11.2457 1.75912C10.5629 1.6568 10 2.2263 10 2.91665V9.16666C10 9.62691 10.3731 10 10.8333 10H17.0833Z" />
                </svg>
              </span>
              <span class="text">Dashboard</span>
            </a>
            <ul id="ddmenu_1" class="collapse show dropdown-nav">
              <li>
                <a href="{{ path('association_dashboard') }}" class="active"> Analytics </a>
              </li>
            </ul>
          </li>
          
          
          
          
          
          <span class="divider"><hr /></span>
          <li class="nav-item">
            <a href="{{ path('association_tables') }}">
              <span class="icon">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path
                    d="M1.66666 4.16667C1.66666 3.24619 2.41285 2.5 3.33332 2.5H16.6667C17.5872 2.5 18.3333 3.24619 18.3333 4.16667V9.16667C18.3333 10.0872 17.5872 10.8333 16.6667 10.8333H3.33332C2.41285 10.8333 1.66666 10.0872 1.66666 9.16667V4.16667Z" />
                  <path
                    d="M1.875 13.75C1.875 13.4048 2.15483 13.125 2.5 13.125H17.5C17.8452 13.125 18.125 13.4048 18.125 13.75C18.125 14.0952 17.8452 14.375 17.5 14.375H2.5C2.15483 14.375 1.875 14.0952 1.875 13.75Z" />
                  <path
                    d="M2.5 16.875C2.15483 16.875 1.875 17.1548 1.875 17.5C1.875 17.8452 2.15483 18.125 2.5 18.125H17.5C17.8452 18.125 18.125 17.8452 18.125 17.5C18.125 17.1548 17.8452 16.875 17.5 16.875H2.5Z" />
                </svg>
              </span>
              <span class="text">Gerer</span>
            </a>
          </li>
          

          
        </ul>
      </nav>
      
    </aside>
    <div class="overlay"></div>
    <!-- ======== sidebar-nav end =========== -->

    <!-- ======== main-wrapper start =========== -->
    <main class="main-wrapper">
        <!-- ========== header start ========== -->
      <header class="header">
        <div class="container-fluid">
          <div class="row">
            <div class="col-lg-5 col-md-5 col-6">
              <div class="header-left d-flex align-items-center">
                <div class="menu-toggle-btn mr-15">
                     <h1>{{ association.name }}</h1>
                </div>
                
              </div>
            </div>
            <div class="col-lg-7 col-md-7 col-6">
              <div class="header-right">
               
                <!-- profile start -->
                  <div class="profile-box ml-15">
                      <button class="dropdown-toggle bg-transparent border-0" type="button" id="profile"
                          data-bs-toggle="dropdown" aria-expanded="false">
                          <div class="profile-info">
                              <div class="info">
                                  <div class="image">
                                      <img src="{{ asset('admin_assets/images/profile/profile-image.png') }}" alt="" />
                                  </div>
                                  <div>
                                      <h6 class="fw-500">{{ association.name }}</h6>
                                      <p>Association</p>
                                  </div>
                              </div>
                          </div>
                      </button>
                      <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="profile">
                          <li>
                              <div class="author-info flex items-center !p-1">
                                  <div class="image">
                                      <img src="{{ asset('admin_assets/images/profile/profile-image.png') }}" alt="image">
                                  </div>
                                  <div class="content">
                                      <h4 class="text-sm">Adam Joe</h4>
                                      <a class="text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white text-xs" href="#">Email@gmail.com</a>
                                  </div>
                              </div>
                          </li>
                          <li class="divider"></li>
                          
                          <li>
                                                  <!-- LogOut  -->
                              <a href="{{ path('app_eventspage') }}"> <i class="lni lni-exit"></i> Sign Out </a>
                          </li>
                      </ul>
                  </div>
                <!-- profile end -->
              </div>
            </div>
          </div>
        </div>
      </header>
      <!-- ========== header end ========== -->

      <!-- ========== section start ========== -->
      <section class="section">
        <div class="container-fluid">
          <!-- ========== title-wrapper start ========== -->
          <div class="title-wrapper pt-30">
            <div class="row align-items-center">
              <div class="col-md-6">
                <div class="title">
                    <h2>{{ association.name|default('Association') }} - Events Management</h2>
                </div>
              </div>
              <!-- end col -->
              <div class="col-md-6">
                <div class="breadcrumb-wrapper">
                  <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                      <li class="breadcrumb-item">
                        <a href="#0">Dashboard</a>
                      </li>
                      <li class="breadcrumb-item active" aria-current="page">
                        Analytics
                      </li>
                    </ol>
                  </nav>
                </div>
              </div>
              <!-- end col -->
            </div>
            <!-- end row -->
          </div>
          <!-- ========== title-wrapper end ========== -->
          <div class="row">
            <div class="col-xl-3 col-lg-4 col-sm-6">
              <div class="icon-card mb-30">
                <div class="icon purple">
                  <i class="lni lni-calendar"></i>
                </div>
                <div class="content">
                  <h6 class="mb-10">Total Events</h6>
                  <h3 class="text-bold mb-10">{{ totalEvents }}</h3>
                  <p class="text-sm">
                    <span class="text-gray">Organized events</span>
                  </p>
                </div>
              </div>
            </div>
            <!-- End Col -->
            <div class="col-xl-3 col-lg-4 col-sm-6">
              <div class="icon-card mb-30">
                <div class="icon success">
                  <i class="lni lni-dollar"></i>
                </div>
                <div class="content">
                  <h6 class="mb-10">Total Donations</h6>
                  <h3 class="text-bold mb-10">{{ totalDonationAmount|number_format(2) }}</h3>
                  <p class="text-sm">
                    <span class="text-gray">{{ totalDonations }} donations received</span>
                  </p>
                </div>
              </div>
            </div>
            <!-- End Col -->
            <div class="col-xl-3 col-lg-4 col-sm-6">
              <div class="icon-card mb-30">
                <div class="icon primary">
                  <i class="lni lni-users"></i>
                </div>
                <div class="content">
                  <h6 class="mb-10">Total Donors</h6>
                  <h3 class="text-bold mb-10">{{ donorCount }}</h3>
                  <p class="text-sm">
                    <span class="text-gray">Unique supporters</span>
                  </p>
                </div>
              </div>
            </div>
            <!-- End Col -->
            <div class="col-xl-3 col-lg-4 col-sm-6">
              <div class="icon-card mb-30">
                <div class="icon orange">
                  <i class="lni lni-stats-up"></i>
                </div>
                <div class="content">
                  <h6 class="mb-10">Avg. Per Donor</h6>
                  <h3 class="text-bold mb-10">{{ donorCount > 0 ? (totalDonationAmount / donorCount)|number_format(2) : '0.00' }}</h3>
                  <p class="text-sm">
                    <span class="text-gray">Average donation</span>
                  </p>
                </div>
              </div>
            </div>
            <!-- End Col -->
          </div>
          
          <!-- Chart Row -->
          <div class="row">
            <div class="col-lg-7">
              <div class="card-style mb-30">
                <div class="title d-flex flex-wrap align-items-center justify-content-between">
                  <div class="left">
                    <h6 class="text-medium mb-2">Monthly Donations</h6>
                  </div>
                </div>
                <!-- End Title -->
                <div class="chart">
                  <canvas id="Chart1" style="width: 100%; height: 400px; margin-bottom: 15px;"></canvas>
                </div>
                <!-- End Chart -->
              </div>
            </div>
            <!-- End Col -->
            <div class="col-lg-5">
              <div class="card-style mb-30">
                <div class="title d-flex flex-wrap align-items-center justify-content-between">
                  <div class="left">
                    <h5 class="text-medium mb-2">Event Types Distribution</h5>
                    <p class="text-sm text-muted">Analysis of event categories</p>
                  </div>
                  <div class="right">
                    <div class="select-style-1">
                      <div class="select-position select-sm">
                        <select class="light-bg" id="chartViewSelector">
                          <option value="doughnut">Doughnut View</option>
                          <option value="pie">Pie View</option>
                          <option value="polarArea">Polar Area</option>
                        </select>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div class="chart-container position-relative" style="height:350px; margin-top: 20px;">
                  <canvas id="eventTypesChart"></canvas>
                </div>
                
                <div class="chart-legend-wrapper mt-3">
                  <div class="d-flex flex-wrap justify-content-center" id="custom-legend">
                    {% for type, count in eventTypeCounts %}
                    <div class="legend-item d-flex align-items-center me-3 mb-2">
                      <span class="legend-color" id="legend-color-{{ loop.index0 }}" style="width: 12px; height: 12px; display: inline-block; border-radius: 50%; margin-right: 5px;"></span>
                      <span class="legend-text text-sm">{{ type }} ({{ count }})</span>
                    </div>
                    {% endfor %}
                  </div>
                </div>
                
                <div class="chart-info text-center mt-4">
                  <p class="text-sm text-muted">
                    
                    Total of <strong>{{ eventTypeCounts|reduce((sum, count) => sum + count) }}</strong> events across <strong>{{ eventTypeCounts|length }}</strong> categories
                  </p>
                </div>
              </div>
            </div>
            <!-- End Col -->
          </div>
          <!-- End Row -->
          
          <!-- Recent Donations Table -->
          <div class="row">
            <div class="col-lg-12">
              <div class="card-style mb-30">
                <div class="title d-flex flex-wrap align-items-center justify-content-between">
                  <div class="left">
                    <h6 class="text-medium mb-30">Recent Donations</h6>
                  </div>
                </div>
                <!-- End Title -->
                <div class="table-responsive">
                  <table class="table top-selling-table">
                    <thead>
                      <tr>
                        <th>
                          <h6 class="text-sm text-medium">Donor</h6>
                        </th>
                        <th class="min-width">
                          <h6 class="text-sm text-medium">Event</h6>
                        </th>
                        <th class="min-width">
                          <h6 class="text-sm text-medium">Amount</h6>
                        </th>
                        <th class="min-width">
                          <h6 class="text-sm text-medium">Date</h6>
                        </th>
                      </tr>
                    </thead>
                    <tbody>
                      {% if recentDonations|length > 0 %}
                        {% for donation in recentDonations %}
                          <tr>
                            <td>
                              <div class="donor">
                                <div class="image">
                                  <img src="{{ asset('admin_assets/images/profile/profile-image.png') }}" alt="" />
                                </div>
                                <p class="text-sm">{{ donation.firstName }} {{ donation.lastName }}</p>
                              </div>
                            </td>
                            <td>
                              <p class="text-sm">{{ donation.event.name }}</p>
                            </td>
                            <td>
                              <p class="text-sm">{{ donation.donationAmount }}</p>
                            </td>
                            <td>
                              <p class="text-sm">{{ donation.createdAt ? donation.createdAt|date("Y-m-d") : 'Unknown' }}</p>
                            </td>
                          </tr>
                        {% endfor %}
                      {% else %}
                        <tr>
                          <td colspan="4" class="text-center">No donations yet</td>
                        </tr>
                      {% endif %}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
          <!-- End Row -->
        

          <!-- End Row -->
        </div>
        <!-- end container -->
      </section>
      <!-- ========== section end ========== -->

      
    </main>
    <!-- ======== main-wrapper end =========== -->
{% endblock %}
{% block javascripts %}
    <!-- ========= All Javascript files linkup ======== -->
    <script src="{{ asset('admin_assets/js/bootstrap.bundle.min.js') }}"></script>
    <script src="{{ asset('admin_assets/js/Chart.min.js') }}"></script>
    <script src="{{ asset('admin_assets/js/dynamic-pie-chart.js') }}"></script>
    <script src="{{ asset('admin_assets/js/moment.min.js') }}"></script>
    <script src="{{ asset('admin_assets/js/fullcalendar.js') }}"></script>
    <script src="{{ asset('admin_assets/js/jvectormap.min.js') }}"></script>
    <script src="{{ asset('admin_assets/js/world-merc.js') }}"></script>
    <script src="{{ asset('admin_assets/js/polyfill.js') }}"></script>
    <script src="{{ asset('admin_assets/js/main.js') }}"></script>





<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // =========== chart one start (Monthly Donations)
    const ctx1 = document.getElementById("Chart1").getContext("2d");
    const chart1 = new Chart(ctx1, {
      type: "line",
      data: {
        labels: [
          "Jan", "Feb", "Mar", "Apr", "May", "Jun", 
          "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
        ],
        datasets: [
          {
            label: "Monthly Donations",
            backgroundColor: "rgba(54, 92, 245, 0.2)",
            borderColor: "#365CF5",
            data: {{ monthlyDonations|json_encode|raw }},
            pointBackgroundColor: "#365CF5",
            pointHoverBackgroundColor: "#365CF5",
            pointBorderColor: "#365CF5",
            pointHoverBorderColor: "#fff",
            pointHoverBorderWidth: 3,
            pointRadius: 6,
            pointHoverRadius: 8,
            fill: true,
            tension: 0.4,
          }
        ],
      },
      options: {
        plugins: {
          legend: {
            display: false
          },
          tooltip: {
            callbacks: {
              label: function(context) {
                return context.dataset.label + ': ' + context.parsed.y;
              }
            }
          }
        },
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            grid: {
              color: "#F3F6F8",
            },
            ticks: {
              callback: function(value) {
                return value;
              }
            }
          },
          x: {
            grid: {
              display: false
            }
          }
        }
      }
    });

    // =========== chart two start (Donation Types)
    const ctx2 = document.getElementById("Chart2").getContext("2d");
    const chart2 = new Chart(ctx2, {
      type: "doughnut",
      data: {
        labels: ["Event Access", "Money", "Clothes", "Food", "Other"],
        datasets: [
          {
            data: [
              {{ eventDonationCounts.eventAccess|default(0) }},
              {{ eventDonationCounts.money|default(0) }},
              {{ eventDonationCounts.clothes|default(0) }},
              {{ eventDonationCounts.food|default(0) }},
              {{ eventDonationCounts.other|default(0) }}
            ],
            backgroundColor: [
              "#365CF5",
              "#9b51e0",
              "#f2994a",
              "#4CAF50",
              "#F44336"
            ],
            borderWidth: 0,
            label: "Donation Types"
          },
        ],
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'right',
            labels: {
              boxWidth: 15,
              padding: 20
            }
          },
          tooltip: {
            callbacks: {
              label: function(context) {
                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                const percentage = Math.round((context.parsed / total) * 100);
                return context.label + ': ' + context.parsed + ' (' + percentage + '%)';
              }
            }
          }
        }
      }
    });
  });


 document.addEventListener('DOMContentLoaded', function() {
  // Define a color palette with gradients
  const colorPalettes = {
    solid: [
      '#4CAF50', '#2196F3', '#FFC107', '#E91E63', '#9C27B0', 
      '#FF5722', '#3F51B5', '#00BCD4', '#8BC34A', '#795548'
    ],
    gradient: [
      ['#43a047', '#76d275'], // green
      ['#1976d2', '#64b5f6'], // blue
      ['#ffb300', '#ffe082'], // amber
      ['#d81b60', '#f48fb1'], // pink
      ['#7b1fa2', '#ba68c8'], // purple
      ['#e64a19', '#ff8a65'], // deep orange
      ['#303f9f', '#7986cb'], // indigo
      ['#0097a7', '#4dd0e1'], // cyan
      ['#689f38', '#aed581'], // light green
      ['#5d4037', '#a1887f']  // brown
    ]
  };

  // Extract event types data
  const labels = [];
  const data = [];
  
  {% for type, count in eventTypeCounts %}
    labels.push('{{ type }}');
    data.push({{ count }});
  {% endfor %}

  // Create gradient backgrounds
  const ctx = document.getElementById('eventTypesChart').getContext('2d');
  const gradientBackgrounds = colorPalettes.gradient.map((colors, i) => {
    if (i >= data.length) return null;
    const gradient = ctx.createLinearGradient(0, 0, 0, 400);
    gradient.addColorStop(0, colors[0]);
    gradient.addColorStop(1, colors[1]);
    return gradient;
  }).filter(bg => bg !== null);
  
  // Update legend colors
  colorPalettes.gradient.forEach((colors, i) => {
    const legendColor = document.getElementById(`legend-color-${i}`);
    if (legendColor) {
      legendColor.style.backgroundColor = colors[0];
    }
  });

  // Load saved preference or use default
  const savedChartType = localStorage.getItem('preferredChartType') || 'doughnut';
  const chartSelector = document.getElementById('chartViewSelector');
  if (chartSelector) {
    chartSelector.value = savedChartType;
  }
  
  // Create the chart configuration
  const chartOptions = {
    type: savedChartType,
    data: {
      labels: labels,
      datasets: [{
        data: data,
        backgroundColor: gradientBackgrounds,
        borderColor: colorPalettes.solid.slice(0, data.length),
        borderWidth: 2,
        hoverBorderWidth: 4,
        hoverBorderColor: '#fff',
        hoverOffset: 10
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      layout: {
        padding: 20
      },
      plugins: {
        legend: {
          display: false
        },
        tooltip: {
          backgroundColor: 'rgba(255, 255, 255, 0.9)',
          titleColor: '#000',
          bodyColor: '#333',
          bodyFont: {
            size: 14
          },
          padding: 12,
          cornerRadius: 8,
          boxShadow: '0px 4px 15px rgba(0, 0, 0, 0.1)',
          callbacks: {
            label: function(context) {
              const label = context.label || '';
              const value = context.raw;
              const total = context.dataset.data.reduce((acc, val) => acc + val, 0);
              const percentage = Math.round((value / total) * 100);
              return `${label}: ${value} events (${percentage}%)`;
            }
          }
        }
      },
      animation: {
        animateScale: true,
        animateRotate: true,
        duration: 2000,
        easing: 'easeOutQuart'
      }
    }
  };

  // Adjust specific options based on chart type
  if (savedChartType === 'polarArea') {
    chartOptions.options.scales = {
      r: {
        ticks: {
          display: false
        }
      }
    };
  } else {
    chartOptions.options.cutout = savedChartType === 'doughnut' ? '60%' : undefined;
  }

  // Create the initial chart
  let eventTypesChart = new Chart(ctx, chartOptions);
  
  // Chart type switcher
  const chartViewSelector = document.getElementById('chartViewSelector');
  if (chartViewSelector) {
    chartViewSelector.addEventListener('change', function(e) {
      const newChartType = e.target.value;
      
      // Store the current selected value in localStorage
      localStorage.setItem('preferredChartType', newChartType);
      
      // Destroy the existing chart
      eventTypesChart.destroy();
      
      // Update chart configuration
      chartOptions.type = newChartType;
      
      // Adjust specific options based on chart type
      if (newChartType === 'polarArea') {
        chartOptions.options.scales = {
          r: {
            ticks: {
              display: false
            }
          }
        };
        chartOptions.options.cutout = undefined;
      } else {
        chartOptions.options.scales = {};
        chartOptions.options.cutout = newChartType === 'doughnut' ? '60%' : undefined;
      }
      
      // Create new chart and reassign to variable
      eventTypesChart = new Chart(ctx, chartOptions);
    });
  }
});
</script>
{% endblock %}